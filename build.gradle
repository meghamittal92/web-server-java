plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.client'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: '1.3.1.Final'
	compile 'org.mapstruct:mapstruct-processor:1.3.1.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	compile 'com.auth0:java-jwt:3.4.0'

	compile 'org.flywaydb:flyway-core'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.junit.jupiter:junit-jupiter:5.4.0')

	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
	compile group: 'com.google.guava', name: 'guava', version: '21.0'

	compile 'org.glassfish.jersey.core:jersey-client'
	compile 'org.glassfish.jersey.media:jersey-media-json-jackson'
	compile 'org.glassfish.jersey.inject:jersey-hk2'

	testCompile group: "org.dbunit", name: "dbunit", version: "2.4.7"

}
jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/jacoco")
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	afterEvaluate {
		getClassDirectories().setFrom(files(classDirectories.files.collect({
			fileTree(dir: it,
					exclude: [
					        '**/dto/**',
							'**/domain/exception/**',
							'**/domain/model/**',
							'**/repository/**',
							'**/configuration/db**',
							'**/configuration/Constants/**'
					]
			)
		})))
	}
}
test {
	useJUnitPlatform()
	ignoreFailures = true
	finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 1
			}
		}
	}
}